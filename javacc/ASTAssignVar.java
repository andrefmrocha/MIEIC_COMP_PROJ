import semantics.Symbol;

/* Generated By:JJTree: Do not edit this line. ASTAssignVar.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTAssignVar extends SimpleNode {
  public String varIdentifier;
  public ASTAssignVar(int id) {
    super(id);
  }

  public ASTAssignVar(Parser p, int id) {
    super(p, id);
  }

//  @Override
//  public void eval() throws SemanticsException {
//    if(this.jjtGetNumChildren() != 2) throw new SemanticsException("Variable assignment must have two operators");
//
//    SimpleNode identifier = (SimpleNode) this.jjtGetChild(0);
//
//    String name;
//    if(identifier instanceof ASTIdentifier) {
//      ASTIdentifier temp = (ASTIdentifier) identifier;
//      name = temp.identifierName;
//    } else throw new SemanticsException("Variable has not a valid identifier");
//
//    Symbol symbol = this.table.getSymbol(name);
//    if(symbol == null)
//      throw new SemanticsException("Variable " + name + " has not been initialized");
//
//    SimpleNode expression = (SimpleNode) this.jjtGetChild(1);
      //must be TypeNode
      //eval the expression and retrieve the value
//  }
}
/* JavaCC - OriginalChecksum=661756e145ed220ec46575b3a8adecd3 (do not edit this line) */
