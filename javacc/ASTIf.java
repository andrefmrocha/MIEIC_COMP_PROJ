import semantics.Symbol.Type;

/* Generated By:JJTree: Do not edit this line. ASTIf.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTIf extends TypeNode {
  public ASTIf(int id) {
    super(id);
  }

  public ASTIf(Parser p, int id) {
    super(p, id);
  }

  @Override
  public void eval() throws SemanticsException {
    if(this.jjtGetNumChildren() < 1) throw new SemanticsException("'If' statement must have at least a condition expression ");

    SimpleNode condition = (SimpleNode) this.jjtGetChild(0);
    this.evaluateChild(condition, Type.BOOL);

    for(int i = 1; i < this.jjtGetNumChildren(); i++) {
      SimpleNode child = (SimpleNode) this.jjtGetChild(i);
      child.setTable(table);
      child.eval();
    }

  }
}
/* JavaCC - OriginalChecksum=3f17c4ed5b4fd5cc052c1c2d168b79b9 (do not edit this line) */
