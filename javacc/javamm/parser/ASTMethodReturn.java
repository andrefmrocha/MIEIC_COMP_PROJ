/* Generated By:JJTree: Do not edit this line. ASTMethodReturn.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_Javamm=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package javamm.parser;

import javamm.SemanticsException;
import javamm.semantics.Symbol;
import java.io.PrintWriter;

public
class ASTMethodReturn extends SimpleNode {
    Symbol.Type expectedType = null;


    public ASTMethodReturn(int id) {
        super(id);
    }

    public ASTMethodReturn(Javamm p, int id) {
        super(p, id);
    }

    @Override
    public void eval(Javamm parser) {
        if (!(this.jjtGetChild(0) instanceof TypeNode)) {
            parser.semanticErrors.add(new SemanticsException("Unknown return type!", this));
            return;
        }

        final TypeNode node = (TypeNode) this.jjtGetChild(0);
        System.out.println("Return table " + table + " in line " + getLine());
        node.setTables(table, methodTable);
        node.evaluateChild(node, new Symbol(expectedType), parser);
    }

    @Override
    public void write(PrintWriter writer) {
        final SimpleNode node = (SimpleNode) this.jjtGetChild(0);
        System.out.println("Table " + node.table + " in line " + node.getLine());
        node.write(writer);
        writer.println("  "  + Symbol.getJVMPrefix(expectedType) + "return");
    }
}
/* JavaCC - OriginalChecksum=f35d6e18a29162cb6c0e550634450721 (do not edit this line) */
