package javamm.parser;

import javamm.SemanticsException;
import javamm.semantics.Symbol;
import javamm.semantics.Symbol.Type;

/* Generated By:JJTree: Do not edit this line. ASTArrayAccess.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTArrayAccess extends TypeNode {
    public ASTArrayAccess(int id) {
        super(id);
        type = Type.INT;  //TODO: Adapt if String[] is to be used
    }

    public ASTArrayAccess(Parser p, int id) {
        super(p, id);
        type = Type.INT;  //TODO: Adapt if String[] is to be used
    }

    @Override
    public void eval() throws SemanticsException {
        if (this.jjtGetNumChildren() != 2) throw new SemanticsException("Array access require identifier and index");

        SimpleNode arrayName = (SimpleNode) this.jjtGetChild(0);
        SimpleNode indexValue = (SimpleNode) this.jjtGetChild(1);

        this.evaluateChild(arrayName, new Symbol(Type.INT_ARRAY));
        this.evaluateChild(indexValue, new Symbol(Type.INT));
    }
}
/* JavaCC - OriginalChecksum=07823d6065ca9b37f085148b14d167b9 (do not edit this line) */
