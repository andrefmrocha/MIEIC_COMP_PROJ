package javamm.parser;

import javamm.semantics.StackUsage;
import javamm.semantics.Symbol.Type;

import java.io.PrintWriter;
/* Generated By:JJTree: Do not edit this line. ASTLessThan.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_Javamm=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTLessThan extends BooleanBinaryOperatorNode {
  public ASTLessThan(int id) {
    super(id,Type.BOOL,Type.INT);
  }

  public ASTLessThan(Javamm p, int id) {
    super(p, id, Type.BOOL,Type.INT);
  }

  @Override
  public Type[] getSupportedTypes() {
    return new Type[]{Type.INT};
  }

  @Override
  public void write(PrintWriter writer) {
    int currCount = ASTIf.labelCounter;
    ASTIf.labelCounter++;
    write(writer,"notLess_" + currCount);
    writer.println("  iconst_1");
    writer.println("  goto endCmp_" + currCount);
    writer.println("notLess_" + currCount + ":");
    writer.println("  iconst_0");
    writer.println("endCmp_" + currCount + ":");
  }

  @Override
  public void write(PrintWriter writer, String labelFalse,boolean revert) {
    SimpleNode leftOperand = (SimpleNode) this.jjtGetChild(0);
    SimpleNode rightOperand = (SimpleNode) this.jjtGetChild(1);

    leftOperand.write(writer);
    rightOperand.write(writer);

    if(!revert)
      writer.println("  if_icmpge " + labelFalse);
  }

  @Override
  public void writeConditionOpt(PrintWriter writer, String labelFalse) {
    writer.println("  if_icmplt " + labelFalse);
  }

  @Override
  protected void calculateStackUsage(StackUsage stackUsage) {
    calculateParamsStackUsage(stackUsage);
    stackUsage.inc(1); //iconst_x
  }

  @Override
  public void calculateParamsStackUsage(StackUsage stackUsage) {
    SimpleNode leftOperand = (SimpleNode) this.jjtGetChild(0);
    SimpleNode rightOperand = (SimpleNode) this.jjtGetChild(1);

    leftOperand.calculateStackUsage(stackUsage);
    rightOperand.calculateStackUsage(stackUsage);
    stackUsage.dec(2); //if_icmpge
  }
}
/* JavaCC - OriginalChecksum=c0d8a8972c0a4b4df64282733df15850 (do not edit this line) */
